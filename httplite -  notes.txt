HttpListener and WebClient for C++

server:
serve(port, requestHandler)
	socket
	bind
	listen
	while (!m_stopped)
		accept
		if m_stopped 
			break
		spawn thread to handleRequests

handleRequests(requestHandler)
	recv until collected headers and body -> request
	response = requestHandler(request)
	send response to client

stop
	m_stopped = true
	connect to self to trigger listen to give up
	close all request thread sockets
	join all request threads

client:
open(server, port)
response makeRequest(verb, path, queryParams, headers, optional<buffer>)
close

response:
statusCode
headers
optional<buffer>

buffer:
buffer(wstring)
wstring toString(encoding)
vector<uint8_t> m_bytes